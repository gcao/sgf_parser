digraph SGF_STATE_MACHINE {
begin[];
value_end[];
game_node[];
value_end -> game_node[label="/;/"];
var_begin[];
value_end -> var_begin[label="/\(/"];
prop_name_begin[];
value_end -> prop_name_begin[label="/[a-zA-Z]/"];
value_begin[];
value_end -> value_begin[label="/\[/"];
var_end[];
value_end -> var_end[label="/\)/"];
var_end -> game_node[label="/;/"];
var_end -> var_begin[label="/\(/"];
game_end[];
var_end -> game_end[label="nil"];
value[];
value_begin -> value[label="/[^\]]/"];
value_escape[];
value_begin -> value_escape[label="/\\/"];
value_begin -> value_end[label="/\]/"];
value -> value_escape[label="/\\/"];
value -> value[label="/[^\]]/"];
value -> value_end[label="/\]/"];
game_node -> var_begin[label="/\(/"];
game_node -> prop_name_begin[label="/[a-zA-Z]/"];
game_node -> var_end[label="/\)/"];
game_begin[];
begin -> game_begin[label="/\(/"];
invalid[];
begin -> invalid[label="/[^\s]/"];
prop_name[];
prop_name_begin -> prop_name[label="/[a-zA-Z]/"];
prop_name_begin -> value_begin[label="/\[/"];
game_begin -> game_node[label="/;/"];
game_begin -> invalid[label="/[^\s]/"];
value_escape -> value[label="/./"];
var_begin -> game_node[label="/;/"];
prop_name -> value_begin[label="/\[/"];
}
